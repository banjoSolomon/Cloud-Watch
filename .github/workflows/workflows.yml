name: Deploy Dockerhub

on:
  push:
    branches:
      - in-dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Package
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t solomon11/cloud:latest .

      - name: Push Docker image to Docker Hub
        run: docker push solomon11/cloud:latest

      - name: Run Docker container with memory limit
        run: docker run -d -p 8080:8080 --memory="128m" solomon11/cloud:latest

      - name: Cache Trivy DB
        uses: actions/cache@v2
        with:
          path: /tmp/trivy-db
          key: trivy-db-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            trivy-db-${{ runner.os }}-

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: solomon11/cloud:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
          scan-type: image
          scan-ref: .
          list-all-pkgs: false

      - name: Cleanup Docker container
        run: docker stop $(docker ps -q --filter ancestor=solomon11/cloud:latest) && docker rm $(docker ps -aq --filter ancestor=solomon11/cloud:latest)
